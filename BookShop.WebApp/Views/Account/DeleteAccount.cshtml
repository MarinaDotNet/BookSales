@using Microsoft.Extensions.Caching.Memory
@{
    ViewData["Title"] = "Delete Account";
}
@model ViewModel
@inject IMemoryCache _userCache

<body id="deleteaccountpage">

    <partial name="/Views/Shared/_AccountPartial.cshtml" />

    @if (_userCache.TryGetValue("userToken", out (string token, string expiry, string userName, string email) userCache) &&
          !string.IsNullOrWhiteSpace(userCache.userName)) { }
    <form asp-controller="Account" asp-action="DeleteAccount" method="post" class="input-form">
        <h1>@userCache.userName, we are sorry to see you go!</h1>
        @if(Model is not null && !string.IsNullOrWhiteSpace(Model.ErrorView.AdditionalMessage))
        {
            <p class="text-danger form-center-text">@Model!.ErrorView.AdditionalMessage</p>
        }
        <p>
            <b>Delete account:</b> @userCache.userName
            </p>

        <input class="form-control" id="accountPassword" name="accountPassword" type="password" placeholder="Enter your account password" value="@string.Empty"/>

        <p>Are you shure?</p>
        <input type="checkbox" id="isConfirmed" name="isConfirmed" value="true">
        <label for="isConfirmed">Tick to delete account</label>
        <p class="text-danger">The deletion precess would not be abortable</p>

        <button class="btn btn-danger my-btn form-control" type="submit" >Delete</button>
        
    </form> 
</body>
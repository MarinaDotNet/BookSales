@using Microsoft.Extensions.Caching.Memory
@{
    ViewData["Title"] = "Change Login";
}

@model ViewModel
@inject IMemoryCache _userCache

<body id="loginchangepage">
    <div class="account">

        <partial name="/Views/Shared/_AccountPartial.cshtml" />

        <div class="account-data">
            <form asp-controller="Account" asp-action="ChangeLogin" method="post" class="input-form">
                <h3 class="form-header">Change account login:</h3>
                @if (Model is not null && !string.IsNullOrWhiteSpace(Model.ErrorView.AdditionalMessage))
                {
                    <p class="text-danger">@Model!.ErrorView.AdditionalMessage</p>
                }
                @if (Model is not null && !string.IsNullOrWhiteSpace(Model.AccountView.RegistrationMessage))
                {
                    <p class="">@Model.AccountView.RegistrationMessage</p>
                }
                <p>
                    <b>Account login:</b>
                    @if (_userCache.TryGetValue("userToken", out (string token, string expiry, string userName, string email) userCache) &&
                    !string.IsNullOrWhiteSpace(userCache.userName))
                    {
                        @userCache.userName
                    }
                </p>
                <div class="mb-3">
                    <label for="accountPassword" class="form-label">Password</label>
                    <input type="password" class="form-control" id="accountPassword" name="accountPassword" required placeholder="Enter your account password">
                </div>
                <div class="mb-3">
                    <label for="newLogin" class="form-label">New login</label>
                    <input type="text" class="form-control" id="newLogin" name="newLogin" placeholder="Enter your new login/username" required>
                </div>

                <button type="submit" class="btn btn-primary my-btn form-control">Change</button>

            </form>
        </div>
    </div>
</body>